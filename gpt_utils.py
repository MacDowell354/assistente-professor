import os
import json
from openai import OpenAI, OpenAIError
from pypdf import PdfReader

# -----------------------------
# CONFIGURA√á√ÉO DE AMBIENTE
# -----------------------------
api_key = os.getenv("OPENAI_API_KEY")
if not api_key:
    raise ValueError("‚ùå Vari√°vel de ambiente OPENAI_API_KEY n√£o encontrada.")
client = OpenAI(api_key=api_key)

# -----------------------------
# MENSAGEM PADR√ÉO PARA FORA DE ESCOPO
# -----------------------------
OUT_OF_SCOPE_MSG = (
    "Essa pergunta √© muito boa, mas no momento ela est√° <strong>fora do conte√∫do abordado nas aulas do curso "
    "Consult√≥rio High Ticket</strong>. Isso pode indicar uma oportunidade de melhoria do nosso material! üòä<br><br>"
    "Vamos sinalizar esse tema para a equipe pedag√≥gica avaliar a inclus√£o em vers√µes futuras do curso. "
    "Enquanto isso, recomendamos focar nos ensinamentos j√° dispon√≠veis para ter os melhores resultados poss√≠veis no consult√≥rio."
)

# -----------------------------
# CARREGA TRANSCRI√á√ïES E PDFs (1√ó NO STARTUP)
# -----------------------------
BASE_DIR = os.path.dirname(__file__)

# 1) texto das transcri√ß√µes
TRANSCRIPT_PATH = os.path.join(BASE_DIR, "transcricoes.txt")
_raw_txt = open(TRANSCRIPT_PATH, encoding="utf-8").read()

# 2) texto do Plano de A√ß√£o (1¬™ Semana)
PDF1_PATH = os.path.join(BASE_DIR, "PlanodeAcaoConsultorioHighTicket-1Semana (4)[1].pdf")
_raw_pdf1 = ""
try:
    reader1 = PdfReader(PDF1_PATH)
    _raw_pdf1 = "\n\n".join(page.extract_text() or "" for page in reader1.pages)
except Exception:
    _raw_pdf1 = ""

# 3) texto do Guia do Curso
PDF2_PATH = os.path.join(BASE_DIR, "GuiadoCursoConsultorioHighTicket.-CHT21[1].pdf")
_raw_pdf2 = ""
try:
    reader2 = PdfReader(PDF2_PATH)
    _raw_pdf2 = "\n\n".join(page.extract_text() or "" for page in reader2.pages)
except Exception:
    _raw_pdf2 = ""

# Combina tudo para resumo
_combined = _raw_txt + "\n\n" + _raw_pdf1 + "\n\n" + _raw_pdf2

# Pede resumo ao GPT-4
try:
    resp = client.chat.completions.create(
        model="gpt-4",
        messages=[
            {"role": "system", "content": (
                "Voc√™ √© um resumidor especialista em educa√ß√£o. "
                "Resuma em at√© 300 palavras todo o conte√∫do do curso ‚ÄúConsult√≥rio High Ticket‚Äù, "
                "incluindo o plano de a√ß√£o da primeira semana e o Guia do Curso, "
                "para servir de base na classifica√ß√£o de escopo e tipo de prompt."
            )},
            {"role": "user", "content": _combined}
        ]
    )
    COURSE_SUMMARY = resp.choices[0].message.content
except OpenAIError:
    COURSE_SUMMARY = ""

# -----------------------------
# MAPA DE KEYWORDS PARA TIPO DE PROMPT
# -----------------------------
TYPE_KEYWORDS = {
    "revisao": ["revis√£o", "revisao", "revise", "resumir"],
    "precificacao": ["precifica√ß√£o", "precificacao", "precificar", "pre√ßo", "valor", "faturamento"],
    "health_plan": ["health plan", "valor do health plan", "retorno do investimento"],
    "capitacao_sem_marketing_digital": ["offline", "sem usar instagram", "sem instagram", "sem an√∫ncios", "sem anuncios"],
    "aplicacao": ["como aplico", "aplica√ß√£o", "aplico", "roteiro", "aplica√ß√£o"],
    "faq": ["quais", "d√∫vidas", "duvidas", "pergunta frequente"],
    "explicacao": ["explique", "o que √©", "defina", "conceito"],
    "plano_de_acao": ["plano de a√ß√£o", "primeira semana", "1¬™ semana"],
    "guia": ["guia do curso", "passo a passo", "CHT21"]
}

# -----------------------------
# RESPOSTAS CAN√îNICAS PARA 5 PERGUNTAS DO GUIA
# -----------------------------
CANONICAL_QA = {
    # 1. Quatro passos iniciais
    "quais s√£o os quatro passos iniciais descritos no guia do curso consult√≥rio high ticket para come√ßar a participa√ß√£o?": (
        "1. <strong>Passo 1:</strong> Assista √† aula de Onboarding completo.<br>"
        "2. <strong>Passo 2:</strong> Entre no grupo exclusivo de avisos da turma.<br>"
        "3. <strong>Passo 3:</strong> Acesse a √Årea de Membros e preencha seu perfil.<br>"
        "4. <strong>Passo 4:</strong> Participe do Desafio Health Plan clicando em ‚ÄúParticipar‚Äù."
    ),
    # 2. Inscri√ß√£o no Desafio
    "o que o participante deve fazer ap√≥s entrar na √°rea de membros para dar o primeiro passo no desafio health plan?": (
        "1. <strong>Clicar em ‚ÄúParticipar‚Äù</strong> no m√≥dulo Desafio Health Plan.<br>"
        "2. <strong>Fechar</strong> a janela inicial.<br>"
        "3. Na tela seguinte, <strong>clicar novamente em ‚ÄúParticipar‚Äù</strong> para efetivar sua inscri√ß√£o no desafio."
    ),
    # 3. Mapa de atividades sem datas
    "como √© estruturado o mapa de atividades do desafio health plan em termos de fases e prazos?": (
        "O mapa de atividades do Desafio Health Plan √© dividido em tr√™s fases, sem considerar datas espec√≠ficas:<br>"
        "<strong>Fase 1 ‚Äì Miss√£o inicial:</strong> assistir aos m√≥dulos 1‚Äì6 e preencher o quiz correspondente;<br>"
        "<strong>Fase 2 ‚Äì Masterclass e envio do Health Plan:</strong> participar da masterclass de Health Plan e enviar o primeiro plano produzido;<br>"
        "<strong>Fase 3 ‚Äì Miss√µes semanais de acompanhamento:</strong> realizar envios semanais de planners de consecutividade e participar das atividades de encerramento."
    ),
    # 4. Suporte em caso de urg√™ncia/crise
    "caso o participante enfrente uma situa√ß√£o cr√≠tica, qual procedimento deve ser adotado para solicitar suporte?": (
        "Em caso de situa√ß√£o cr√≠tica, envie um e-mail para <strong>ajuda@nandamac.com</strong> com o assunto <strong>‚ÄúS.O.S Crise‚Äù</strong>. "
        "A equipe de suporte retornar√° em at√© 24 horas."
    ),
    # 5. D√∫vidas sobre o m√©todo
    "onde e como o participante deve tirar d√∫vidas sobre o m√©todo do curso?": (
        "As d√∫vidas sobre o m√©todo devem ser postadas exclusivamente na <strong>Comunidade</strong> da √Årea de Membros. "
        "N√£o utilize Direct, WhatsApp ou outros canais para questionamentos metodol√≥gicos."
    )
}

# -----------------------------
# IDENTIDADE E TEMPLATES
# -----------------------------
identidade = (
    "<strong>Voc√™ √© Nanda Mac.ia</strong>, a IA oficial da Nanda Mac, treinada com o conte√∫do do curso "
    "<strong>Consult√≥rio High Ticket</strong>. Responda como uma professora experiente, ajudando o aluno a aplicar o m√©todo na pr√°tica.<br><br>"
)

prompt_variacoes = {
    "explicacao": (
        "<strong>Objetivo:</strong> Explicar com base no conte√∫do das aulas. Use uma linguagem clara e did√°tica, "
        "com t√≥picos ou passos. Evite respostas gen√©ricas. Mostre o conte√∫do como se fosse uma aula de **Posicionamento High Ticket**.<br><br>"
    ),
    "faq": (
        "<strong>Objetivo:</strong> Responder uma d√∫vida frequente entre os alunos do curso. "
        "Use exemplos pr√°ticos e aplique o m√©todo passo a passo."
    ),
    "revisao": (
        "<strong>Objetivo:</strong> Fazer uma revis√£o r√°pida dos pontos centrais do m√©todo de precifica√ß√£o estrat√©gica. "
        "Use exatamente seis bullets, cada um iniciando com verbo de a√ß√£o e t√≠tulo em negrito: "
        "**Identificar Pacientes Potenciais**, **Determinar Valores**, **Elaborar o Health Plan**, "
        "**Preparar a Apresenta√ß√£o**, **Comunicar o Valor** e **Monitorar Resultados**. "
        "Ap√≥s o t√≠tulo de cada bullet, adicione uma breve explica√ß√£o de uma linha. "
        "E **certifique-se de mencionar o benef√≠cio de dobrar o faturamento e fidelizar pacientes** em pelo menos dois desses bullets.<br><br>"
    ),
    "aplicacao": (
        "<strong>Objetivo:</strong> Aplicar o roteiro de atendimento High Ticket na primeira consulta. "
        "Use exatamente seis bullets, cada um iniciando com verbo de a√ß√£o e estes t√≠tulos em negrito:<br>"
        "‚û° **Abertura da Consulta:** Garanta acolhimento profissional, transmitindo exclusividade e empatia.<br>"
        "‚û° **Mapear Expectativas:** Pergunte objetivos e preocupa√ß√µes do paciente, construindo rapport.<br>"
        "‚û° **Elaborar Health Plan:** Explique o **Health Plan** personalizado, detalhando etapas e investimento.<br>"
        "‚û° **Validar Compromisso:** Confirme entendimento do paciente e mencione potencial de dobrar faturamento.<br>"
        "‚û° **Usar Two-Options:** Ofere√ßa duas op√ß√µes de pacote, reduzindo obje√ß√µes e gerando seguran√ßa.<br>"
        "‚û° **Agendar Follow-up:** Marque retorno imediato para manter engajamento e fidelizar pacientes.<br><br>"
    ),
    "capitacao_sem_marketing_digital": (
        "<strong>Objetivo:</strong> Mostrar uma **estrat√©gia 100% offline** do m√©todo Consult√≥rio High Ticket para atrair pacientes "
        "de alto valor sem usar Instagram ou an√∫ncios, passo a passo:<br>"
        "‚û° **Encantamento de pacientes atuais:** Envie um convite VIP impresso ou bilhete manuscrito;<br>"
        "‚û° **Parcerias com profissionais de sa√∫de:** Conecte-se com m√©dicos, fisioterapeutas, nutricionistas e psic√≥logos;<br>"
        "‚û° **Cartas personalizadas com proposta VIP:** Envie convites impressos destacando diferenciais;<br>"
        "‚û° **Manuten√ß√£o via WhatsApp (sem automa√ß√£o):** Grave e envie mensagem de voz ap√≥s a consulta;<br>"
        "‚û° **Constru√ß√£o de autoridade silenciosa:** Colete depoimentos reais e imprima folhetos;<br>"
        "‚û° **Fideliza√ß√£o e indica√ß√µes espont√¢neas:** Implemente o programa ‚ÄúIndique um amigo VIP‚Äù;<br><br>"
        "Com essa sequ√™ncia voc√™ <strong>dobra seu faturamento</strong> e conquista pacientes de alto valor sem depender de redes sociais ou an√∫ncios."
    )
}

# -----------------------------
# FUN√á√ÉO PRINCIPAL
# -----------------------------
def generate_answer(
    question: str,
    context: str = "",
    history: str = None,
    tipo_de_prompt: str = "explicacao"
) -> str:
    # Override para perguntas can√¥nicas do Guia
    key = question.strip().lower()
    if key in CANONICAL_QA:
        return CANONICAL_QA[key]

    # Classifica√ß√£o normal
    cls = classify_prompt(question)
    if cls["scope"] == "OUT_OF_SCOPE":
        return OUT_OF_SCOPE_MSG

    tipo = cls["type"]
    contexto_para_prompt = "" if tipo == "capitacao_sem_marketing_digital" else (
        f"<br><br><strong>üìö Contexto relevante:</strong><br>{context}<br>" if context.strip() else ""
    )

    # Monta prompt
    prompt = identidade + prompt_variacoes.get(tipo, "") + contexto_para_prompt
    if history:
        prompt += f"<br><strong>üìú Hist√≥rico anterior:</strong><br>{history}<br>"
    prompt += f"<br><strong>ü§î Pergunta:</strong><br>{question}<br><br><strong>üß† Resposta:</strong><br>"

    # Chama API
    try:
        response = client.chat.completions.create(
            model="gpt-4",
            messages=[{"role": "user", "content": prompt}]
        )
    except OpenAIError:
        response = client.chat.completions.create(
            model="gpt-3.5-turbo",
            messages=[{"role": "user", "content": prompt}]
        )

    return response.choices[0].message.content
