import os
import re
import random
from openai import OpenAI, OpenAIError

# Configura√ß√£o do caminho para o arquivo de transcri√ß√µes
TRANSCRIPTS_PATH = os.path.join(os.path.dirname(__file__), "transcricoes.txt")

client = OpenAI()

OUT_OF_SCOPE_MSG = (
    "Desculpe, ainda n√£o tenho informa√ß√µes suficientes sobre esse tema espec√≠fico do curso. "
    "Por favor, envie outra pergunta ou consulte o material da aula."
)

GREETINGS = [
    "Ol√°, Doutor(a), seja muito bem-vindo(a)!",
    "Oi, Doutor(a), tudo bem? Como posso ajudar?",
    "Bem-vindo(a) de volta, Doutor(a)!",
    "Ol√°, Doutor(a)! Estou aqui para apoiar voc√™ no seu crescimento"
]

CLOSINGS = [
    "Se quiser um exemplo pr√°tico ou modelo, clique nos bot√µes abaixo.",
    "Tem outro desafio no seu consult√≥rio? Me conte ou clique em Novo Tema.",
    "Se quiser aprofundar, escolha uma op√ß√£o r√°pida ou pergunte de novo!",
    "Quer mudar de assunto? S√≥ digitar ‚Äònovo tema‚Äô.",
    "Essa resposta te ajudou? Clique em üëç ou üëé."
]

def gerar_quick_replies(question, explicacao, history=None):
    return [
        "Quero um exemplo pr√°tico",
        "Me explique passo a passo",
        "Tenho uma d√∫vida sobre esse tema"
    ]

def resposta_link(titulo, url, icone="üìÑ"):
    return f"<br><a class='chip' href='{url}' target='_blank'>{icone} {titulo}</a>"

def resposta_link_externo(titulo, url, icone="üîó"):
    return f"<br><a class='chip' href='{url}' target='_blank'>{icone} {titulo}</a>"

def generate_answer(question, context="", history=None, tipo_de_prompt=None, is_first_question=True):
    cumprimento_detectado = None
    pergunta_limpa = question.lower().strip()

    extra_link = ""
    snippet = ""

    saudacao = random.choice(GREETINGS)
    fechamento = random.choice(CLOSINGS)

    if history:
        prompt = (
            "Voc√™ √© a professora Nanda Mac.ia, uma intelig√™ncia artificial did√°tica criada para dar suporte aos alunos m√©dicos do Curso Online Consult√≥rio High Ticket, adquirido por eles na nossa plataforma de ensino.

"
            "Voc√™ oferece duas possibilidades para o aluno aprender:

"
            "1. Fazer o curso completo diretamente com voc√™: Voc√™ guia o aluno por todas as aulas e m√≥dulos (do 1 ao 7), explicando em detalhes cada conte√∫do, como se fosse uma mentoria individualizada. Ap√≥s cada aula, voc√™ pergunta ao aluno se ele deseja avan√ßar para a pr√≥xima aula, revisar a aula atual ou esclarecer d√∫vidas adicionais.

"
            "2. Tirar d√∫vidas complementares do curso: Caso o aluno esteja acompanhando as videoaulas na plataforma do curso, voc√™ atua como apoio, respondendo d√∫vidas espec√≠ficas e pontuais. Nessa fun√ß√£o, voc√™ explica com clareza, fornece exemplos pr√°ticos e orienta sobre como aplicar no consult√≥rio o conte√∫do visto nas aulas gravadas.

"
            "Identifique claramente se a pergunta do aluno indica que ele deseja ser guiado no curso aula por aula (modo ensino completo), ou se √© uma d√∫vida espec√≠fica enquanto ele assiste as aulas na plataforma (modo tirar d√∫vidas).

"
            "[IMPORTANTE]: Sua comunica√ß√£o deve ser sempre clara, did√°tica, acolhedora, paciente e motivadora. Nunca critique d√∫vidas, e sempre incentive o aluno a avan√ßar em seu aprendizado e aplicar o conhecimento imediatamente no consult√≥rio."
            f"

Hist√≥rico da conversa:
{history}
Pergunta atual:
'{question}'

"
            "Use o conte√∫do abaixo como base:
"
            f"{snippet}
"
        )
    else:
        prompt = (
            "Voc√™ √© a professora Nanda Mac.ia, uma intelig√™ncia artificial did√°tica criada para dar suporte aos alunos m√©dicos do Curso Online Consult√≥rio High Ticket, adquirido por eles na nossa plataforma de ensino.

"
            "Voc√™ oferece duas possibilidades para o aluno aprender:

"
            "1. Fazer o curso completo diretamente com voc√™: Voc√™ guia o aluno por todas as aulas e m√≥dulos (do 1 ao 7), explicando em detalhes cada conte√∫do, como se fosse uma mentoria individualizada. Ap√≥s cada aula, voc√™ pergunta ao aluno se ele deseja avan√ßar para a pr√≥xima aula, revisar a aula atual ou esclarecer d√∫vidas adicionais.

"
            "2. Tirar d√∫vidas complementares do curso: Caso o aluno esteja acompanhando as videoaulas na plataforma do curso, voc√™ atua como apoio, respondendo d√∫vidas espec√≠ficas e pontuais. Nessa fun√ß√£o, voc√™ explica com clareza, fornece exemplos pr√°ticos e orienta sobre como aplicar no consult√≥rio o conte√∫do visto nas aulas gravadas.

"
            "Identifique claramente se a pergunta do aluno indica que ele deseja ser guiado no curso aula por aula (modo ensino completo), ou se √© uma d√∫vida espec√≠fica enquanto ele assiste as aulas na plataforma (modo tirar d√∫vidas).

"
            "[IMPORTANTE]: Sua comunica√ß√£o deve ser sempre clara, did√°tica, acolhedora, paciente e motivadora. Nunca critique d√∫vidas, e sempre incentive o aluno a avan√ßar em seu aprendizado e aplicar o conhecimento imediatamente no consult√≥rio."
            f"

Pergunta atual:
'{question}'

"
            "Use o conte√∫do abaixo como base:
"
            f"{snippet}
"
        )

    try:
        response = client.chat.completions.create(
            model="gpt-4o-mini",
            messages=[
                {"role": "system", "content": "Responda SEMPRE em portugu√™s do Brasil."},
                {"role": "user", "content": prompt}
            ],
            temperature=0.4,
            max_tokens=700
        )
    except OpenAIError:
        response = client.chat.completions.create(
            model="gpt-3.5-turbo",
            messages=[
                {"role": "system", "content": "Responda SEMPRE em portugu√™s do Brasil."},
                {"role": "user", "content": prompt}
            ],
            temperature=0.4,
            max_tokens=700
        )

    explicacao = response.choices[0].message.content.strip()
    quick_replies = gerar_quick_replies(question, explicacao, history)

    resposta = f"{saudacao}<br><br>{explicacao}{extra_link}<br><br>{fechamento}"

    return resposta, quick_replies
