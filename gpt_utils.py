import os
import json
import re
from openai import OpenAI, OpenAIError
from pypdf import PdfReader

# -----------------------------
# CONFIGURA√á√ÉO DE AMBIENTE
# -----------------------------
api_key = os.getenv("OPENAI_API_KEY")
if not api_key:
    raise ValueError("‚ùå Vari√°vel de ambiente OPENAI_API_KEY n√£o encontrada.")
client = OpenAI(api_key=api_key)

# -----------------------------
# MENSAGEM PADR√ÉO PARA FORA DE ESCOPO
# -----------------------------
OUT_OF_SCOPE_MSG = (
    "Essa pergunta √© muito boa, mas no momento ela est√° "
    "<strong>fora do conte√∫do abordado nas aulas do curso "
    "Consult√≥rio High Ticket</strong>. Isso pode indicar uma "
    "oportunidade de melhoria do nosso material! üòä<br><br>"
    "Vamos sinalizar esse tema para a equipe pedag√≥gica avaliar "
    "a inclus√£o em vers√µes futuras do curso. Enquanto isso, "
    "recomendamos focar nos ensinamentos j√° dispon√≠veis para ter "
    "os melhores resultados poss√≠veis no consult√≥rio."
)

# -----------------------------
# NORMALIZA√á√ÉO DE CHAVE
# -----------------------------
def normalize_key(text: str) -> str:
    s = text.lower()
    s = re.sub(r"[^\w\s]", "", s)
    s = re.sub(r"\s+", " ", s).strip()
    return s

# -----------------------------
# LEITURA DE TRANSCRI√á√ïES E PDFs
# -----------------------------
BASE_DIR = os.path.dirname(__file__)

_raw_txt = open(os.path.join(BASE_DIR, "transcricoes.txt"), encoding="utf-8").read()

PDF1_PATH = os.path.join(BASE_DIR, "PlanodeAcaoConsultorioHighTicket-1Semana (4)[1].pdf")
_raw_pdf1 = ""
try:
    reader1 = PdfReader(PDF1_PATH)
    _raw_pdf1 = "\n\n".join(page.extract_text() or "" for page in reader1.pages)
except:
    _raw_pdf1 = ""

PDF2_PATH = os.path.join(BASE_DIR, "GuiadoCursoConsultorioHighTicket.-CHT21[1].pdf")
_raw_pdf2 = ""
try:
    reader2 = PdfReader(PDF2_PATH)
    _raw_pdf2 = "\n\n".join(page.extract_text() or "" for page in reader2.pages)
except:
    _raw_pdf2 = ""

# para classifica√ß√£o (n√£o usado nas respostas can√¥nicas)
_combined = "\n\n".join([_raw_txt, _raw_pdf1, _raw_pdf2])
try:
    resp = client.chat.completions.create(
        model="gpt-4",
        messages=[
            {"role": "system", "content":
                "Voc√™ √© um resumidor especialista em educa√ß√£o. Resuma em at√© 300 palavras todo o conte√∫do "
                "do curso Consult√≥rio High Ticket, incluindo Plano de A√ß√£o (1¬™ Semana) e Guia do Curso, "
                "para servir de base na classifica√ß√£o de prompts."
            },
            {"role": "user", "content": _combined}
        ]
    )
    COURSE_SUMMARY = resp.choices[0].message.content
except OpenAIError:
    COURSE_SUMMARY = ""

# -----------------------------
# PALAVRAS-CHAVE PARA CLASSIFICA√á√ÉO
# -----------------------------
TYPE_KEYWORDS = {
    "revisao":                        ["revis√£o", "revise", "resumir"],
    "precificacao":                   ["precifica√ß√£o", "precificar", "pre√ßo", "valor", "faturamento"],
    "health_plan":                    ["health plan", "retorno do investimento"],
    "capitacao_sem_marketing_digital":["offline", "sem instagram", "sem an√∫ncios"],
    "aplicacao":                      ["como aplico", "aplica√ß√£o", "roteiro"],
    "faq":                            ["quais", "pergunta frequente"],
    "explicacao":                     ["explique", "o que √©", "defina"],
    "plano_de_acao":                  ["plano de a√ß√£o", "primeira semana"],
    "guia":                           ["guia do curso", "passo a passo", "cht21"]
}

# -----------------------------
# RESPOSTAS CAN√îNICAS NORMALIZADAS
# -----------------------------
CANONICAL_QA = {
    # ‚Äî Guia do Curso ‚Äî
    "oi nanda acabei de me inscrever no curso qual e o primeiro passo que devo dar assim que entrar":
        "1. <strong>Passo 1:</strong> Assista √† aula de Onboarding completo.<br>"
        "2. <strong>Passo 2:</strong> Entre no grupo de avisos da turma.<br>"
        "3. <strong>Passo 3:</strong> Acesse a √Årea de Membros e preencha seu perfil.<br>"
        "4. <strong>Passo 4:</strong> Participe do Desafio Health Plan clicando em ‚ÄúParticipar‚Äù.",
    "depois de entrar na area de membros como eu me inscrevo no desafio health plan":
        "1. <strong>Clique em ‚ÄúParticipar‚Äù</strong> no m√≥dulo Desafio Health Plan.<br>"
        "2. Feche a janela de confirma√ß√£o.<br>"
        "3. Clique novamente em <strong>‚ÄúParticipar‚Äù</strong> para efetivar.<br>"
        "4. Feche e voc√™ estar√° inscrito.",
    "voce pode explicar como o desafio health plan esta organizado em fases":
        "O Desafio Health Plan possui tr√™s fases (sem datas fixas):<br>"
        "- <strong>Fase 1 ‚Äì Miss√£o inicial:</strong> assistir m√≥dulos 1‚Äì6 e preencher quiz.<br>"
        "- <strong>Fase 2 ‚Äì Masterclass & Envio:</strong> participar da masterclass e enviar seu plano.<br>"
        "- <strong>Fase 3 ‚Äì Acompanhamento:</strong> enviar planners semanais e concluir atividades.",
    "caso o participante enfrente uma situacao critica qual procedimento deve ser adotado para solicitar suporte":
        "Em caso cr√≠tico, envie e-mail para <strong>ajuda@nandamac.com</strong> com assunto <strong>S.O.S Crise</strong>. "
        "A equipe retornar√° em at√© 24 h.",
    "onde e como o participante deve tirar duvidas sobre o metodo do curso":
        "Poste d√∫vidas exclusivamente na <strong>Comunidade</strong> da √Årea de Membros. N√£o use Direct, WhatsApp ou outros canais.",

    # ‚Äî Plano de A√ß√£o (1¬™ Semana) ‚Äî
    "no exercicio de bloqueios com dinheiro como escolho qual bloqueio priorizar e defino minha atitude dia do chega":
        "Identifique o bloqueio de culpa que mais afeta (S√≠ndrome do Sacerdote) como priorit√°rio. "
        "Em ‚ÄúOnde quero chegar‚Äù, escreva: ‚ÄúA partir de hoje, afirmarei meu valor em cada consulta e n√£o deixarei de cobrar pelo meu trabalho.‚Äù",
    "na parte de autoconfianca profissional o que devo escrever como atitude para nao deixar certas situacoes me abalar":
        "Liste duas situa√ß√µes que abalaram sua confian√ßa. "
        "Em ‚ÄúOnde quero chegar‚Äù, defina: ‚ÄúSempre que receber cr√≠ticas, realizarei uma sess√£o de feedback construtivo com um colega.‚Äù",
    "como uso a atividade de nicho de atuacao para definir meu foco e listar as acoes necessarias":
        "Descreva seu posicionamento atual e identifique seu nicho ideal. "
        "Liste a√ß√µes espec√≠ficas com prazo, ex.: ‚ÄúEspecializar em [X] em 3 meses‚Äù, ‚ÄúCriar pacote online de avalia√ß√£o inicial at√© o pr√≥ximo m√™s‚Äù e ‚ÄúRevisar site e materiais de comunica√ß√£o em 2 semanas.‚Äù",
    "no valor da consulta e procedimentos como encontro referencias de mercado e defino meus valores atuais e ideais":
        "Anote seus valores atuais; pesquise refer√™ncias de mercado em associa√ß√µes ou colegas; considere custos, experi√™ncia e diferenciais; "
        "e defina seus valores ideais justificando seu diferencial, ex.: ‚ÄúR$ 300 por sess√£o, com relat√≥rio personalizado.‚Äù",
    "ainda nao tenho pacientes particulares qual estrategia de atracao de pacientes high ticket devo priorizar e como executar na agenda":
        "Reserve um bloco fixo (ex.: segundas 8h‚Äì10h) para enviar 5 mensagens personalizadas ao seu nicho. "
        "Quando iniciar atendimentos, implemente a Patient Letter com convites impressos para potenciais pacientes High Ticket.",

    # ‚Äî Dossi√™ 007 ‚Äî
    "qual e o objetivo principal do dossie 007 e para quem ele e indicado":
        "O Dossi√™ 007 ensina as estrat√©gias iniciais do M√©todo Consult√≥rio High Ticket para captar e reter Pacientes High Ticket. "
        "√â indicado para profissionais que come√ßam do zero, atendem conv√™nios e querem migrar para particulares, ou j√° t√™m pacientes e desejam dobrar o faturamento do consult√≥rio.",

    "como implementar a acao 1 de networking descrita no dossie 007":
        "A A√ß√£o 1 de Networking exige que voc√™ identifique os outros profissionais que atendem seus pacientes e entre em contato "
        "seguindo o script: ‚ÄúOi |Nome do Profissional|, aqui √© o Dr. |Seu Nome|... Vamos conversar 10 minutos sobre o paciente X?‚Äù "
        "e registre as indica√ß√µes geradas.",

    "quais scripts devo usar para confirmar e remarcar consultas na acao 2 do dossie 007":
        "Use o Script de Confirma√ß√£o de Consultas dois dias antes: ‚ÄúOi [nome], confirmo sua consulta dia X √†s Y. Digite 1 para confirmar, 2 para cancelar...‚Äù "
        "e o Script de Remarca√ß√£o, mostrando surpresa e alertando que a agenda est√° bloqueada, perguntando se o paciente realmente deseja remarcar.",

    "como funciona a acao 3 de reativacao high ticket e qual script usar para pacientes antigos":
        "Ap√≥s 6 meses sem visita, envie: ‚ÄúOi [nome], aqui √© a assistente da Dra X, faz X meses da √∫ltima consulta. Vamos agendar sua pr√≥xima avalia√ß√£o? (2 Options/1 choice)‚Äù. "
        "Se n√£o responder em 48 h, siga com: ‚ÄúAconteceu algo? N√£o sei se viu minha mensagem. Seu feedback √© importante.‚Äù",

    "quais sao as orientacoes finais do dossie 007 e como aplica-las":
        "1. Sempre destaque sua especialidade espec√≠fica; "
        "2. Lembre-se: tudo √© sobre o paciente, n√£o sobre voc√™; "
        "3. Ligue e agrade√ßa pessoalmente aos profissionais que recomendaram seus pacientes."
}

# normaliza as chaves para busca
CANONICAL_QA_NORMALIZED = {
    normalize_key(k): v for k, v in CANONICAL_QA.items()
}

# -----------------------------
# IDENTIDADE E TEMPLATES
# -----------------------------
identidade = (
    "<strong>Voc√™ √© Nanda Mac.ia</strong>, a IA oficial da Nanda Mac, treinada com o conte√∫do do curso "
    "<strong>Consult√≥rio High Ticket</strong>. Responda como uma professora experiente, ajudando o aluno a aplicar o m√©todo na pr√°tica.<br><br>"
)

prompt_variacoes = {
    "explicacao": (
        "<strong>Objetivo:</strong> Explicar com base no conte√∫do das aulas. "
        "Use uma linguagem clara e did√°tica, com t√≥picos ou passos. Evite gen√©ricos.<br><br>"
    ),
    # ... (demais varia√ß√µes mantidas conforme seu design original)
}

# -----------------------------
# CLASSIFICADOR DE ESCOPO + TIPO
# -----------------------------
def classify_prompt(question: str) -> dict:
    lower = question.lower()
    if "exerc√≠cio" in lower or "exercicios" in lower:
        return {"scope": "OUT_OF_SCOPE", "type": "explicacao"}
    for t, kws in TYPE_KEYWORDS.items():
        if any(k in lower for k in kws):
            return {"scope": "IN_SCOPE", "type": t}
    return {"scope": "OUT_OF_SCOPE", "type": "explicacao"}

# -----------------------------
# FUN√á√ÉO PRINCIPAL
# -----------------------------
def generate_answer(
    question: str,
    context: str = "",
    history: str = None,
    tipo_de_prompt: str = None
) -> str:
    # 1) Resposta can√¥nica se existir
    key = normalize_key(question)
    if key in CANONICAL_QA_NORMALIZED:
        return CANONICAL_QA_NORMALIZED[key]

    # 2) Classifica√ß√£o de escopo
    cls = classify_prompt(question)
    if cls["scope"] == "OUT_OF_SCOPE":
        return OUT_OF_SCOPE_MSG

    # 3) Monta prompt din√¢mico
    tipo = cls["type"]
    prompt = identidade + prompt_variacoes.get(tipo, "")
    if context:
        prompt += f"<br><strong>üìö Contexto:</strong><br>{context}<br>"
    if history:
        prompt += f"<br><strong>üìú Hist√≥rico:</strong><br>{history}<br>"
    prompt += f"<br><strong>ü§î Pergunta:</strong><br>{question}<br><br><strong>üß† Resposta:</strong><br>"

    # 4) Chama OpenAI
    try:
        r = client.chat.completions.create(
            model="gpt-4",
            messages=[{"role": "user", "content": prompt}]
        )
    except OpenAIError:
        r = client.chat.completions.create(
            model="gpt-3.5-turbo",
            messages=[{"role": "user", "content": prompt}]
        )
    return r.choices[0].message.content
