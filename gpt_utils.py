import os
import re
import unicodedata
from openai import OpenAI, OpenAIError
from pypdf import PdfReader

# -----------------------------
# CONFIGURA√á√ÉO DE AMBIENTE
# -----------------------------
api_key = os.getenv("OPENAI_API_KEY")
if not api_key:
    raise ValueError("‚ùå Vari√°vel de ambiente OPENAI_API_KEY n√£o encontrada.")
client = OpenAI(api_key=api_key)

# -----------------------------
# MENSAGEM PADR√ÉO PARA FORA DE ESCOPO
# -----------------------------
OUT_OF_SCOPE_MSG = (
    "Essa pergunta √© muito boa, mas no momento ela est√° "
    "<strong>fora do conte√∫do abordado nas aulas do curso Consult√≥rio High Ticket</strong>. "
    "Isso pode indicar uma oportunidade de melhoria do nosso material! üòä<br><br>"
    "Vamos sinalizar esse tema para a equipe pedag√≥gica avaliar a inclus√£o em vers√µes futuras do curso. "
    "Enquanto isso, recomendamos focar nos ensinamentos j√° dispon√≠veis para ter os melhores resultados poss√≠veis no consult√≥rio."
)

# -----------------------------
# NORMALIZA√á√ÉO DE CHAVE
# -----------------------------
def normalize_key(text: str) -> str:
    nfkd = unicodedata.normalize("NFD", text)
    ascii_only = "".join(ch for ch in nfkd if unicodedata.category(ch) != "Mn")
    s = ascii_only.lower()
    s = re.sub(r"[^\w\s]", "", s)
    return re.sub(r"\s+", " ", s).strip()

# -----------------------------
# LEITURA DE ARQUIVOS PDF
# -----------------------------
BASE_DIR = os.path.dirname(__file__)

def read_pdf(path: str) -> str:
    try:
        reader = PdfReader(path)
        return "\n\n".join(page.extract_text() or "" for page in reader.pages)
    except:
        return ""

# Carrega transcri√ß√µes e PDFs
_raw_txt  = open(os.path.join(BASE_DIR, "transcricoes.txt"), encoding="utf-8").read()
_raw_pdf1 = read_pdf(os.path.join(BASE_DIR, "PlanodeAcaoConsultorioHighTicket-1Semana (4)[1].pdf"))
_raw_pdf2 = read_pdf(os.path.join(BASE_DIR, "GuiadoCursoConsultorioHighTicket.-CHT21[1].pdf"))
_raw_pdf3 = read_pdf(os.path.join(BASE_DIR, "5.8 - Dossi√™ 007 - (3)[1].pdf"))
_raw_pdf4 = read_pdf(os.path.join(BASE_DIR, "Papelaria e brindes  lista de links e indica√ß√µes.pdf"))

# -----------------------------
# PALAVRAS-CHAVE PARA CLASSIFICA√á√ÉO
# -----------------------------
TYPE_KEYWORDS = {
    "revisao":                        ["revis√£o", "revise", "resumir"],
    "precificacao":                   ["precifica√ß√£o", "precificar", "pre√ßo", "valor", "faturamento"],
    "health_plan":                    ["health plan", "retorno do investimento", "canva"],
    "capitacao_sem_marketing_digital":[ "offline", "sem instagram", "sem an√∫ncios", "sem redes sociais"],
    "aplicacao":                      ["como aplico", "aplica√ß√£o", "roteiro"],
    "faq":                            ["quais", "pergunta frequente"],
    "explicacao":                     ["explique", "o que √©", "defina", "conceito"],
    "plano_de_acao":                  ["plano de a√ß√£o", "primeira semana"],
    "guia":                           ["guia do curso", "passo a passo", "cht21"],
    "dossie":                         ["dossi√™ 007", "acao 1", "acao 2", "acao 3", "orienta√ß√µes finais"],
    "papelaria":                      ["jo malone", "importadoras", "cafeteiras", "chocolates", "ch√°s"],
    "playlist":                       ["playlist", "spotify"]
}

# -----------------------------
# RESPOSTAS CAN√îNICAS
# -----------------------------
CANONICAL_QA = {
    # ‚Äî Sauda√ß√µes como professora ‚Äî
    "oi": (
        "Ol√°! üòä Seja muito bem-vindo ao seu espa√ßo de aprendizado!<br><br>"
        "Eu sou a Nanda Mac.ia, sua professora virtual aqui no curso Consult√≥rio High Ticket. "
        "Estou aqui para caminhar com voc√™ e esclarecer todas as suas d√∫vidas com base nas aulas do curso, "
        "como uma professora dedicada e experiente.<br><br>"
        "Meu objetivo √© te ajudar a aplicar o m√©todo da Nanda com clareza, seguran√ßa e foco nos resultados."
        "<br><br>Pode perguntar o que quiser, que eu te explico como se estiv√©ssemos em uma aula particular. ü•∞"
    ),
    "ola":  # corresponde a 'ol√°'
        "Ol√°! üòä Seja muito bem-vindo ao seu espa√ßo de aprendizado!<br><br>"
        "Eu sou a Nanda Mac.ia, sua professora virtual aqui no curso Consult√≥rio High Ticket. "
        "Estou aqui para caminhar com voc√™ e esclarecer todas as suas d√∫vidas com base nas aulas do curso, "
        "como uma professora dedicada e experiente.<br><br>"
        "Meu objetivo √© te ajudar a aplicar o m√©todo da Nanda com clareza, seguran√ßa e foco nos resultados."
        "<br><br>Pode perguntar o que quiser, que eu te explico como se estiv√©ssemos em uma aula particular. ü•∞",
    "bom dia":
        "Bom dia! üòä Seja muito bem-vindo ao seu espa√ßo de aprendizado!<br><br>"
        "Eu sou a Nanda Mac.ia, sua professora virtual aqui no curso Consult√≥rio High Ticket. "
        "Pronta para ajudar voc√™ a aplicar o m√©todo da Nanda com clareza e foco nos resultados. "
        "Pergunte o que quiser, como se estiv√©ssemos em uma aula particular! ü•∞",
    "boa tarde":
        "Boa tarde! üòä Seja muito bem-vindo ao seu espa√ßo de aprendizado!<br><br>"
        "Eu sou a Nanda Mac.ia, sua professora virtual aqui no curso Consult√≥rio High Ticket. "
        "Estou pronta para caminhar com voc√™ e esclarecer suas d√∫vidas de forma did√°tica e pr√°tica. ü•∞",
    "boa noite":
        "Boa noite! üòä Seja muito bem-vindo ao seu espa√ßo de aprendizado!<br><br>"
        "Eu sou a Nanda Mac.ia, sua professora virtual aqui no curso Consult√≥rio High Ticket. "
        "Aqui para ajudar voc√™ a aplicar o m√©todo da Nanda com seguran√ßa e foco nos resultados. ü•∞",

    # ‚Äî Health Plan (Canva) ‚Äî
    "onde encontro o link do formulario para criar no canva o health plan personalizado para o paciente":
        "Voc√™ pode acessar o formul√°rio para criar seu Health Plan personalizado no Canva atrav√©s deste link ativo: "
        "<a href=\"https://www.canva.com/design/DAEteeUPSUQ/0isBewvgUTJF0gZaRYZw2g/view?"
        "utm_content=DAEteeUPSUQ&utm_campaign=designshare&utm_medium=link&utm_source=publishsharelink&mode=preview\" target=\"_blank\">"
        "Formul√°rio Health Plan (Canva)</a>. "
        "Ele tamb√©m est√° dispon√≠vel diretamente na Aula 10.4 do curso Consult√≥rio High Ticket.",

    # ‚Äî Patient Letter ‚Äî
    "faz sentido mandar a patient letter para outros profissionais referente a pacientes antigos":
        "Ol√°, excelente pergunta!<br><br>"
        "Sim, faz sentido mandar um Patient Letter para outros profissionais referente a pacientes antigos, principalmente em caso de mudan√ßas significativas no tratamento ou homenagens ao paciente. "
        "O intuito deste tipo de cart√£o √© atualizar informa√ß√µes e marcar o cuidado e reconhecimento do seu trabalho com o paciente.<br><br>"
        "O mesmo vale para pacientes novos, como uma forma de demonstrar que voc√™ est√° acompanhando de perto o desenvolvimento do caso e se esfor√ßa para cri√°-los de forma personalizada, valorizando a rela√ß√£o constru√≠da.<br><br>"
        "No entanto, n√£o √© necess√°rio enviar o Patient Letter ao final de todas as consultas, a n√£o ser que haja alguma informa√ß√£o espec√≠fica que necessita ser compartilhada. "
        "Voc√™ pode optar por envi√°-lo quando ocorrer uma mudan√ßa expressiva no prontu√°rio do paciente ou quando achar pertinente.<br><br>"
        "Lembre-se que o mais importante √© manter a comunica√ß√£o aberta e frequente com outros profissionais, garantindo um atendimento integrado e de excel√™ncia ao paciente.<br><br>"
        "Espero que isso te ajude, qualquer outra d√∫vida, estou √† disposi√ß√£o! üíú",

    # ... demais entradas can√¥nicas existentes ...
}

# Pr√©-normaliza chaves
CANONICAL_QA_NORMALIZED = { normalize_key(k): v for k, v in CANONICAL_QA.items() }

# -----------------------------
# IDENTIDADE E TEMPLATES
# -----------------------------
identidade = (
    "<strong>Voc√™ √© Nanda Mac.ia</strong>, a IA oficial da Nanda Mac, treinada com o conte√∫do "
    "do curso <strong>Consult√≥rio High Ticket</strong>. Responda como uma professora experiente, "
    "ajudando o aluno a aplicar o m√©todo na pr√°tica.<br><br>"
)

prompt_variacoes = {
    "explicacao": (
        "<strong>Objetivo:</strong> Explicar com base no conte√∫do das aulas. "
        "Use uma linguagem clara e did√°tica, com t√≥picos ou passos. Evite gen√©ricos.<br><br>"
    ),
    "faq": (
        "<strong>Objetivo:</strong> Responder de forma direta a d√∫vidas frequentes do curso. "
        "Use exemplos pr√°ticos e mencione etapas conforme o material."
    )
}

# -----------------------------
# CLASSIFICADOR E GERADOR DE RESPOSTA
# -----------------------------
def classify_prompt(question: str) -> dict:
    lower = normalize_key(question)
    if any(canon_key in lower for canon_key in CANONICAL_QA_NORMALIZED):
        return {"scope": "IN_SCOPE", "type": "faq"}
    for t, kws in TYPE_KEYWORDS.items():
        if any(normalize_key(k) in lower for k in kws):
            return {"scope": "IN_SCOPE", "type": t}
    return {"scope": "OUT_OF_SCOPE", "type": "explicacao"}

def generate_answer(question: str, context: str = "", history: str = None, tipo_de_prompt: str = None) -> str:
    key = normalize_key(question)
    # lookup can√¥nico por substring
    for canon_key, answer in CANONICAL_QA_NORMALIZED.items():
        if canon_key in key:
            return answer
    cls = classify_prompt(question)
    if cls["scope"] == "OUT_OF_SCOPE":
        return OUT_OF_SCOPE_MSG
    tipo = cls["type"]
    prompt = identidade + prompt_variacoes.get(tipo, "")
    if context:
        prompt += f"<br><strong>üìö Contexto:</strong><br>{context}<br>"
    if history:
        prompt += f"<br><strong>üìú Hist√≥rico:</strong><br>{history}<br>"
    prompt += f"<br><strong>ü§î Pergunta:</strong><br>{question}<br><br><strong>üß† Resposta:</strong><br>"
    try:
        r = client.chat.completions.create(model="gpt-4", messages=[{"role": "user", "content": prompt}])
    except OpenAIError:
        r = client.chat.completions.create(model="gpt-3.5-turbo", messages=[{"role": "user", "content": prompt}])
    return r.choices[0].message.content
