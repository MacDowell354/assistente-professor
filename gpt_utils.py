import os
import re
import random
from openai import OpenAI, OpenAIError

TRANSCRIPTS_PATH = os.path.join(os.path.dirname(__file__), "transcricoes.txt")
client = OpenAI()

OUT_OF_SCOPE_MSG = (
    "Desculpe, ainda n√£o tenho informa√ß√µes suficientes sobre esse tema espec√≠fico do curso. "
    "Por favor, envie outra pergunta ou consulte o material da aula."
)

GREETINGS = [
    "Ol√°, Profissional da Sa√∫de, seja muito bem-vindo(a)!",
    "Oi, Profissional da Sa√∫de, tudo bem? Como posso ajudar?",
    "Bem-vindo(a) de volta! Pronto(a) para evoluir no consult√≥rio?",
    "Ol√°! Estou aqui para apoiar voc√™ na sua evolu√ß√£o como profissional da sa√∫de."
]

CLOSINGS = [
    "Se quiser um exemplo pr√°tico ou modelo, clique nos bot√µes abaixo.",
    "Tem outro desafio no seu consult√≥rio? Me conte ou clique em Novo Tema.",
    "Se quiser aprofundar, escolha uma op√ß√£o r√°pida ou pergunte de novo!",
    "Quer mudar de assunto? S√≥ digitar ‚Äònovo tema‚Äô.",
    "Essa resposta te ajudou? Clique em üëç ou üëé."
]

# BLOCO DE M√ìDULOS (exatamente igual ao seu, s√≥ para busca e refer√™ncia)
BLOCO_MODULOS = """
m√≥dulo 01 ‚Äì mentalidade high ticket: como desenvolver uma mente preparada para atrair pacientes high ticket
1.1. introdu√ß√£o ‚Äì a mentalidade do especialista high ticket: o primeiro passo para dobrar o faturamento do consult√≥rio
1.2. como quebrar bloqueios com dinheiro e valorizar seu trabalho no consult√≥rio high ticket
1.3. como desenvolver autoconfian√ßa profissional e se tornar autoridade no consult√≥rio high ticket
1.4. concorr√™ncia: como se diferenciar e construir valoriza√ß√£o profissional
1.5. boas pr√°ticas no atendimento: o caminho mais r√°pido para o consult√≥rio high ticket

m√≥dulo 02 ‚Äì senso est√©tico high ticket: como transformar sua imagem e ambiente para atrair pacientes que valorizam
2.1. o senso est√©tico high ticket
2.2. mulheres: senso est√©tico high ticket x cafona
2.3. homens no consult√≥rio high ticket: senso est√©tico, imagem e escolhas que atraem ou afastam pacientes
2.4. senso est√©tico high ticket na decora√ß√£o: o que priorizar e o que evitar no consult√≥rio
2.5. papelaria e brindes
2.6. como fazer o paciente se sentir especial e gerar mais valor na percep√ß√£o dele
2.7. checklist: o que voc√™ precisa mudar hoje no seu consult√≥rio para dobrar o faturamento com o senso est√©tico
2.8. como tornar a primeira impress√£o do paciente inesquec√≠vel
2.9. o que √© cafona no consult√≥rio e afasta paciente high ticket

m√≥dulo 03 ‚Äì posicionamento presencial high ticket: como construir autoridade sem redes sociais
3.1. posicionamento presencial high ticket: estrat√©gias para construir autoridade e valor no consult√≥rio
3.2. voc√™ √© um cnpj: riscos, prote√ß√£o jur√≠dica e postura profissional no consult√≥rio high ticket
3.3. como causar uma boa primeira impress√£o no consult√≥rio high ticket
3.4. como causar uma boa impress√£o pessoal no consult√≥rio high ticket: educa√ß√£o, pontualidade e respeito
3.5. posicionamento em eventos sociais e exposi√ß√£o na m√≠dia: comportamento e limites para fortalecer sua autoridade e atrair pacientes high ticket

m√≥dulo 04 ‚Äì a jornada do paciente high ticket: como transformar atendimento em encantamento e fideliza√ß√£o
4.1. a jornada do paciente high ticket: conceito e regras de ouro para o consult√≥rio
4.2. o que o paciente nunca te falar√°: detalhes essenciais para encantar pacientes high ticket
4.3. secret√°ria e assistente virtual high ticket: fun√ß√µes, riscos e boas pr√°ticas para consult√≥rios lucrativos
4.4. o primeiro contato: como organizar e profissionalizar a marca√ß√£o de consultas desde o in√≠cio
4.5. marca√ß√£o de consulta high ticket: como organizar hor√°rios, valor e scripts para reduzir faltas e valorizar seu atendimento

m√≥dulo 05 ‚Äì estrat√©gias de capta√ß√£o e fideliza√ß√£o: como atrair pacientes high ticket sem tr√°fego ou redes sociais
5.1. passo a passo completo para atrair e reter pacientes high ticket com o m√©todo consult√≥rio high ticket
5.2. o impacto do lifetime value do paciente high ticket no crescimento do consult√≥rio
5.3. como nichar o consult√≥rio para atrair pacientes high ticket
5.4. estrat√©gias pr√°ticas de networking para atra√ß√£o de pacientes high ticket
5.5. estrat√©gias para atrair pacientes high ticket ao come√ßar do absoluto zero

m√≥dulo 06 ‚Äì estrat√©gias de vendas high ticket: como apresentar e fechar tratamentos de alto valor com √©tica
6.1. os passos fundamentais para dobrar o faturamento do consult√≥rio com vendas high ticket
6.2. como migrar dos conv√™nios para o atendimento particular de forma segura e organizada
6.3. como aumentar o valor da sua consulta de forma estrat√©gica e segura
6.4. como e quando dar descontos para pacientes high ticket: estrat√©gia √©tica e eficaz
6.5. t√©cnica alanis ‚Äì como usar apresenta√ß√£o visual para vencer obje√ß√µes e fechar tratamentos high ticket

m√≥dulo 07 ‚Äì estrat√©gias por especialidade
7.1. sa√∫de das crian√ßas ‚Äì estrat√©gias para consult√≥rios pedi√°tricos high ticket
7.2. sa√∫de feminina ‚Äì estrat√©gias high ticket para ginecologia, obstetr√≠cia e sa√∫de da mulher
7.3. sa√∫de do idoso ‚Äì estrat√©gias high ticket para geriatria e aten√ß√£o ao idoso
7.4. cirurgi√µes ‚Äì como apresentar valor, or√ßamento e experi√™ncia high ticket
7.5. doen√ßas s√©rias ‚Äì como conduzir pacientes em situa√ß√µes cr√≠ticas no consult√≥rio high ticket
7.6. profissionais com atendimento misto ‚Äì estrat√©gias para consult√≥rios com diferentes p√∫blicos
7.7. profissionais com baixa rotatividade ‚Äì estrat√©gias para retorno e fideliza√ß√£o
7.8. profissionais da est√©tica ‚Äì estrat√©gias para consult√≥rios est√©ticos e de autocuidado
7.9. nutricionistas ‚Äì estrat√©gias high ticket para emagrecimento, nutrologia e endocrinologia
"""

def gerar_quick_replies(question, explicacao, history=None):
    return [
        "Quero um exemplo pr√°tico",
        "Me explique passo a passo",
        "Tenho uma d√∫vida sobre esse tema"
    ]

def resposta_link(titulo, url, icone="üìÑ"):
    return f"<br><a class='chip' href='{url}' target='_blank'>{icone} {titulo}</a>"

def resposta_link_externo(titulo, url, icone="üîó"):
    return f"<br><a class='chip' href='{url}' target='_blank'>{icone} {titulo}</a>"

def detectar_cenario(pergunta: str) -> str:
    pergunta = pergunta.lower()
    if any(p in pergunta for p in ["quero fazer o curso completo", "come√ßar do in√≠cio", "me ensina tudo", "fazer o curso com voc√™"]):
        return "curso_completo"
    elif any(p in pergunta for p in ["quero come√ßar pelo m√≥dulo", "me mostra o m√≥dulo", "ver o m√≥dulo", "come√ßar m√≥dulo"]):
        return "modulo_especifico"
    elif any(p in pergunta for p in ["assisti", "j√° vi a aula", "tenho uma d√∫vida", "n√£o entendi", "poderia explicar melhor"]):
        return "duvida_pontual"
    elif any(p in pergunta for p in ["exemplo pr√°tico", "me d√° um exemplo", "passo a passo", "como fazer isso"]):
        return "exemplo_pratico"
    else:
        return "geral"

def atualizar_progresso(pergunta: str, progresso: dict) -> dict:
    if not progresso:
        return {'modulo': 1, 'aula': '1.1', 'etapa': 1, 'aguardando_duvida': False}
    if progresso.get('aguardando_duvida'):
        if pergunta.lower().strip() in ["n√£o", "nao", "n√£o tenho d√∫vida", "nao tenho duvida", "pode avan√ßar", "avan√ßar", "continuar"]:
            progresso['aguardando_duvida'] = False
            modulo = progresso['modulo']
            num_atual = float(progresso['aula'])
            num_proxima = round(num_atual + 0.1, 1)
            progresso['aula'] = f"{modulo}.{int(num_proxima * 10) % 10}"
            progresso['etapa'] = 1
        # Se disser "sim" ou perguntar, a IA continua na mesma aula, mesma etapa
    elif pergunta.lower().strip() in ["sim", "sim desejo", "quero sim", "vamos", "ok"]:
        if progresso['etapa'] == 1:
            progresso['etapa'] = 2
        elif progresso['etapa'] == 2:
            progresso['etapa'] = 3
        else:
            progresso['aguardando_duvida'] = True
    return progresso

def generate_answer(question, context="", history=None, tipo_de_prompt=None, is_first_question=True):
    # RECUPERA PROGRESSO DO HIST√ìRICO
    if history and isinstance(history, list) and len(history) > 0:
        ultimo_item = history[-1]
        progresso = ultimo_item.get('progresso', None)
        if not progresso:
            progresso = {'modulo': 1, 'aula': '1.1', 'etapa': 1, 'aguardando_duvida': False}
    else:
        progresso = {'modulo': 1, 'aula': '1.1', 'etapa': 1, 'aguardando_duvida': False}

    progresso = atualizar_progresso(question, progresso)
    modulo = progresso.get('modulo', 1)
    aula = progresso.get('aula', '1.1')
    etapa = progresso.get('etapa', 1)
    aguardando_duvida = progresso.get('aguardando_duvida', False)

    saudacao = random.choice(GREETINGS) if is_first_question else ""
    fechamento = random.choice(CLOSINGS)
    cenario = detectar_cenario(question)

    if cenario == "curso_completo":
        explicacao = (
            f"{saudacao}<br><br>"
            "O curso Consult√≥rio High Ticket √© composto por 7 m√≥dulos, cada um trazendo compet√™ncias-chave para o crescimento do seu consult√≥rio e sua carreira como profissional da sa√∫de.<br><br>"
            "<b>Confira os m√≥dulos:</b><br>"
            "<b>M√≥dulo 01 ‚Äì mentalidade high ticket: como desenvolver uma mente preparada para atrair pacientes high ticket</b><br>"
            "<b>M√≥dulo 02 ‚Äì senso est√©tico high ticket: como transformar sua imagem e ambiente para atrair pacientes que valorizam</b><br>"
            "<b>M√≥dulo 03 ‚Äì posicionamento presencial high ticket: como construir autoridade sem redes sociais</b><br>"
            "<b>M√≥dulo 04 ‚Äì a jornada do paciente high ticket: como transformar atendimento em encantamento e fideliza√ß√£o</b><br>"
            "<b>M√≥dulo 05 ‚Äì estrat√©gias de capta√ß√£o e fideliza√ß√£o: como atrair pacientes high ticket sem tr√°fego ou redes sociais</b><br>"
            "<b>M√≥dulo 06 ‚Äì estrat√©gias de vendas high ticket: como apresentar e fechar tratamentos de alto valor com √©tica</b><br>"
            "<b>M√≥dulo 07 ‚Äì estrat√©gias por especialidade</b><br><br>"
            "Vamos come√ßar pelo m√≥dulo 01?<br><br>"
            "<b>Aulas do m√≥dulo 01:</b><br>"
            "1.1. introdu√ß√£o ‚Äì a mentalidade do especialista high ticket: o primeiro passo para dobrar o faturamento do consult√≥rio<br>"
            "1.2. como quebrar bloqueios com dinheiro e valorizar seu trabalho no consult√≥rio high ticket<br>"
            "1.3. como desenvolver autoconfian√ßa profissional e se tornar autoridade no consult√≥rio high ticket<br>"
            "1.4. concorr√™ncia: como se diferenciar e construir valoriza√ß√£o profissional<br>"
            "1.5. boas pr√°ticas no atendimento: o caminho mais r√°pido para o consult√≥rio high ticket<br><br>"
            "Deseja iniciar agora a aula 1.1? (Responda 'sim' para come√ßar ou escolha outro m√≥dulo.)"
        )
        quick_replies = gerar_quick_replies(question, explicacao, history)
        return explicacao, quick_replies, progresso

    # Aguardando d√∫vida de aula antes de avan√ßar
    if aguardando_duvida:
        explicacao = (
            "Antes de concluir esta aula, ficou alguma d√∫vida sobre o conte√∫do apresentado? "
            "Se precisar de explica√ß√£o adicional, √© s√≥ perguntar! "
            "Se estiver tudo claro, responda 'n√£o' para avan√ßarmos para a pr√≥xima aula."
        )
        quick_replies = gerar_quick_replies(question, explicacao, history)
        return explicacao, quick_replies, progresso

    # Fluxo padr√£o para as aulas
    if etapa == 1:
        instruction = f"Voc√™ est√° iniciando a aula {aula} do m√≥dulo {modulo}. Apresente o objetivo da aula, de forma did√°tica e acolhedora, usando SEMPRE o t√≠tulo da aula exatamente como est√° no bloco oficial, e tratando o usu√°rio como profissional da sa√∫de."
    elif etapa == 2:
        instruction = f"Voc√™ est√° na parte intermedi√°ria da aula {aula} do m√≥dulo {modulo}. Aprofunde o conte√∫do com exemplos pr√°ticos, aplica√ß√µes cl√≠nicas e orienta√ß√µes detalhadas para profissionais da sa√∫de. Use o t√≠tulo da aula exatamente como est√° no bloco oficial."
    else:
        instruction = (
            f"Voc√™ est√° concluindo a aula {aula} do m√≥dulo {modulo}. Recapitule os principais aprendizados de forma sucinta. "
            "Pergunte se ficou alguma d√∫vida ou se o profissional da sa√∫de quer uma explica√ß√£o extra ANTES de considerar a aula conclu√≠da. "
            "S√≥ avance para a pr√≥xima aula se o aluno responder 'n√£o'."
        )
        progresso['aguardando_duvida'] = True

    prompt = f"""{instruction}

Voc√™ √© a professora Nanda Mac.ia, uma intelig√™ncia artificial altamente did√°tica, criada especificamente para ensinar e tirar d√∫vidas de profissionais da sa√∫de que estudam o Curso Online Consult√≥rio High Ticket, ministrado por Nanda Mac Dowell.

Leia atentamente o hist√≥rico da conversa antes de responder, compreendendo o contexto exato da intera√ß√£o atual para garantir precis√£o na sua resposta.

IMPORTANTE: Sempre cite o nome do m√≥dulo e t√≠tulo da aula exatamente como est√° na estrutura abaixo. N√£o adapte, n√£o resuma, n√£o traduza.

ESTRUTURA COMPLETA DO CURSO ‚Äì M√ìDULOS E AULAS:

{BLOCO_MODULOS}

Hist√≥rico da conversa anterior:
{history}

Pergunta atual do profissional da sa√∫de:
'{question}'

Utilize o conte√∫do adicional abaixo, se relevante:
{context}
    """

    try:
        response = client.chat.completions.create(
            model="gpt-4o-mini",
            messages=[
                {"role": "system", "content": "Responda SEMPRE em portugu√™s do Brasil."},
                {"role": "user", "content": prompt}
            ],
            temperature=0.4,
            max_tokens=700
        )
    except OpenAIError:
        response = client.chat.completions.create(
            model="gpt-3.5-turbo",
            messages=[
                {"role": "system", "content": "Responda SEMPRE em portugu√™s do Brasil."},
                {"role": "user", "content": prompt}
            ],
            temperature=0.4,
            max_tokens=700
        )

    explicacao = response.choices[0].message.content.strip()
    quick_replies = gerar_quick_replies(question, explicacao, history)

    if saudacao:
        resposta = f"{saudacao}<br><br>{explicacao}<br><br>{fechamento}"
    else:
        resposta = f"{explicacao}<br><br>{fechamento}"

    return resposta, quick_replies, progresso
