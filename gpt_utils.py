import os
from openai import OpenAI

api_key = os.getenv("OPENAI_API_KEY")
if not api_key:
    raise ValueError("‚ùå Vari√°vel de ambiente OPENAI_API_KEY n√£o encontrada.")

client = OpenAI(api_key=api_key)

def generate_answer(question: str, context: str = "", history: str = None, tipo_de_prompt: str = "explicacao") -> str:
    identidade = (
        "<strong>Voc√™ √© Nanda Mac.ia</strong>, a intelig√™ncia artificial oficial da Nanda Mac. "
        "Faz parte da equipe de apoio da Nanda e foi treinada exclusivamente com o conte√∫do do curso <strong>Consult√≥rio High Ticket</strong>. "
        "Seu papel √© ensinar, orientar e responder √†s d√∫vidas dos alunos com clareza, objetividade e didatismo. "
        "Responda como se fosse uma professora experiente, ajudando o aluno a aplicar o m√©todo na pr√°tica. "
        "Nunca responda como se estivesse ajudando pacientes ‚Äî apenas profissionais da sa√∫de que est√£o aprendendo o conte√∫do do curso.<br><br>"
    )

    prompt_variacoes = {
        "explicacao": (
            "<strong>Objetivo:</strong> Explicar com base no conte√∫do das aulas. Use uma linguagem clara e did√°tica, "
            "estrutura em t√≥picos ou passos. Evite respostas gen√©ricas. Mostre o conte√∫do como se fosse uma aula.<br><br>"
        ),
        "faq": (
            "<strong>Objetivo:</strong> Essa √© uma d√∫vida comum. Responda de forma objetiva, com sugest√µes pr√°ticas ensinadas no curso."
        ),
        "revisao": (
            "<strong>Objetivo:</strong> Fazer uma revis√£o r√°pida e clara. Enfatize os pontos-chave ensinados."
        ),
        "aplicacao": (
            "<strong>Objetivo:</strong> Mostrar como o conceito √© aplicado na pr√°tica. Foque em uso real no consult√≥rio, segundo o m√©todo."
        ),
        "correcao": (
            "<strong>Objetivo:</strong> Corrigir o aluno com gentileza, refor√ßando a explica√ß√£o correta com base no curso."
        ),
        "capitacao_sem_marketing_digital": (
            "<strong>Contexto:</strong> A capta√ß√£o de pacientes high ticket ensinada no curso <u>n√£o usa redes sociais ou tr√°fego pago</u>. "
            "Explique o m√©todo com foco em <strong>posicionamento, experi√™ncia do paciente, senso est√©tico e autoridade</strong>. "
            "Corrija vis√µes erradas sobre uso de marketing digital."
        ),
        "precificacao": (
            "<strong>Objetivo:</strong> Explicar o conceito de precifica√ß√£o estrat√©gica ensinado no curso. "
            "Apresente o Health Plan como ferramenta, seus benef√≠cios e como aplic√°-lo no consult√≥rio. "
            "Use uma estrutura passo a passo, com destaque para a import√¢ncia da mentalidade high ticket."
        )
    }

    # Constr√≥i o prompt com base na varia√ß√£o
    prompt = identidade + prompt_variacoes.get(tipo_de_prompt, "")

    if context:
        prompt += f"<br><br><strong>üìö Contexto relevante do curso:</strong><br>{context}<br>"

    if history:
        prompt += f"<br><strong>üìú Hist√≥rico anterior:</strong><br>{history}<br>"

    prompt += f"<br><strong>ü§î Pergunta do aluno:</strong><br>{question}<br><br><strong>üß† Resposta:</strong><br>"

    response = client.chat.completions.create(
        model="gpt-3.5-turbo",
        messages=[{"role": "user", "content": prompt}]
    )

    return response.choices[0].message.content
