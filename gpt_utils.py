import os
from openai import OpenAI, OpenAIError

# Obt√©m a chave de API\api_key = os.getenv("OPENAI_API_KEY")
if not api_key:
    raise ValueError("‚ùå Vari√°vel de ambiente OPENAI_API_KEY n√£o encontrada.")

client = OpenAI(api_key=api_key)

# Mensagem padr√£o para perguntas fora de escopo
OUT_OF_SCOPE_MSG = (
    "Essa pergunta √© muito boa, mas no momento ela est√° <strong>fora do conte√∫do abordado nas aulas do curso Consult√≥rio High Ticket</strong>. "
    "Isso pode indicar uma oportunidade de melhoria do nosso material! üòä<br><br>"
    "Vamos sinalizar esse tema para a equipe pedag√≥gica avaliar a inclus√£o em vers√µes futuras do curso. "
    "Enquanto isso, recomendamos focar nos ensinamentos j√° dispon√≠veis para ter os melhores resultados poss√≠veis no consult√≥rio."
)

def generate_answer(
    question: str,
    context: str = "",
    history: str = None,
    tipo_de_prompt: str = "explicacao"
) -> str:
    # üîç Detecta perguntas sobre mensagens autom√°ticas
    termos_mensagem_auto = [
        "mensagem autom√°tica", "whatsapp", "resposta autom√°tica",
        "fim de semana", "fora do hor√°rio", "responder depois", "rob√¥"
    ]
    if any(t in question.lower() for t in termos_mensagem_auto):
        return (
            "Ol√°, querida! Vamos esclarecer isso com base no que a pr√≥pria Nanda orienta no curso:<br><br>"
            "üìå A Nanda n√£o recomenda o uso de <strong>mensagens autom√°ticas gen√©ricas</strong> no WhatsApp, "
            "especialmente aquelas como ‚Äúj√° te respondo em breve‚Äù ou ‚Äúassim que poss√≠vel retorno‚Äù. "
            "Isso porque <strong>paciente High Ticket n√£o gosta de respostas padr√µes ou que soem como rob√¥s</strong>.<br><br>"
            "‚ú® O importante √© responder com aten√ß√£o, em hor√°rios espec√≠ficos do dia. "
            "Psic√≥logas, por exemplo, geralmente n√£o t√™m secret√°ria ‚Äî e est√° tudo bem. "
            "Os pacientes j√° entendem que voc√™ est√° em atendimento durante o dia.<br><br>"
            "üí° Se ainda assim quiser configurar algo, recomendo criar uma <strong>mensagem mais humana e acolhedora</strong>, "
            "que transmita seguran√ßa e cuidado, sem parecer fria ou autom√°tica.<br><br>"
            "Se quiser, posso te ajudar a montar uma mensagem assim agora mesmo. Deseja isso?"
        )

    # ‚úã Se n√£o h√° contexto relevante retornado da base de transcri√ß√µes, fora de escopo
    if not context or not context.strip():
        return OUT_OF_SCOPE_MSG

    # Identidade do assistente
    identidade = (
        "<strong>Voc√™ √© Nanda Mac.ia</strong>, a intelig√™ncia artificial oficial da Nanda Mac. "
        "Faz parte da equipe de apoio da Nanda e foi treinada exclusivamente com o conte√∫do do curso <strong>Consult√≥rio High Ticket</strong>. "
        "Seu papel √© ensinar, orientar e responder √†s d√∫vidas dos alunos com clareza, objetividade e didatismo. "
        "Responda como se fosse uma professora experiente, ajudando o aluno a aplicar o m√©todo na pr√°tica. "
        "Nunca responda como se estivesse ajudando pacientes ‚Äî apenas profissionais da sa√∫de que est√£o aprendendo o conte√∫do do curso.<br><br>"
    )

    # Templates de varia√ß√µes de prompt
    prompt_variacoes = {
        "explicacao": (
            "<strong>Objetivo:</strong> Explicar com base no conte√∫do das aulas. Use uma linguagem clara e did√°tica, "
            "estruturada em t√≥picos ou passos. Evite respostas gen√©ricas. Mostre o conte√∫do como se fosse uma aula.<br><br>"
        ),
        "faq": (
            "<strong>Objetivo:</strong> Responder uma d√∫vida frequente entre os alunos do curso. "
            "Use explica√ß√µes pr√°ticas, baseadas nos ensinamentos da Nanda Mac. "
            "Se poss√≠vel, traga exemplos do consult√≥rio, sem usar marketing digital, e aplique o m√©todo passo a passo."
        ),
        "revisao": (
            "<strong>Objetivo:</strong> Fazer uma revis√£o r√°pida e eficiente. "
            "Enfatize os pontos centrais ensinados no curso com clareza. Organize em t√≥picos curtos ou bullets."
        ),
        "aplicacao": (
            "<strong>Objetivo:</strong> Ensinar como aplicar o conceito no dia a dia do consult√≥rio. "
            "Use exemplos realistas e mostre o passo a passo como se estivesse ajudando o aluno a executar a t√©cnica."
        ),
        "correcao": (
            "<strong>Objetivo:</strong> Corrigir gentilmente qualquer erro ou confus√£o na pergunta do aluno."
        ),
        "capitacao_sem_marketing_digital": (
            "<strong>Contexto:</strong> O m√©todo da Nanda Mac n√£o depende de redes sociais ou tr√°fego pago."
        ),
        "precificacao": (
            "<strong>Objetivo:</strong> Explicar o conceito de precifica√ß√£o estrat√©gica ensinado no curso."
        ),
        "health_plan": (
            "<strong>Objetivo:</strong> Ensinar o aluno a montar o **Health Plan** conforme o m√©todo da Nanda Mac. "
            "Estruture em Situa√ß√£o Atual, Objetivo, Plano de Tratamento, Previsibilidade de Retorno e Investimento, sempre mantendo o termo **Health Plan** em ingl√™s."
        )
    }

    # Monta o prompt completo
    prompt = identidade + prompt_variacoes.get(tipo_de_prompt, "")
    prompt += f"<br><br><strong>üìö Contexto relevante do curso:</strong><br>{context}<br>"
    if history:
        prompt += f"<br><strong>üìú Hist√≥rico anterior:</strong><br>{history}<br>"
    prompt += f"<br><strong>ü§î Pergunta do aluno:</strong><br>{question}<br><br><strong>üß† Resposta:</strong><br>"

    # For√ßa sempre GPT-4 para m√°xima qualidade
    modelo_escolhido = "gpt-4"

    # Chama o OpenAI GPT-4 com fallback
    try:
        response = client.chat.completions.create(
            model=modelo_escolhido,
            messages=[{"role": "user", "content": prompt}]
        )
    except OpenAIError:
        response = client.chat.completions.create(
            model="gpt-3.5-turbo",
            messages=[{"role": "user", "content": prompt}]
        )

    return response.choices[0].message.content
